import numpy as np

from tabulate import tabulate


########################################################################################
## LR
########################################################################################

res = {
    0.01: (83.29903, 82.89061, 83.01646),
    0.005: (82.49348, 82.85790, 81.51328),
    0.0025: (82.72171, 81.99200, 81.93025),
    0.001: (83.12994, 82.57712, 83.19931),
    0.0005: (82.69577, 82.94604, 82.57509),
    0.00025: (82.55172, 82.35741, 82.19239),
    0.0001: (81.68054, 81.44921, 81.67149),
}
res = sorted(res.items(), reverse=True)

pretty = [["LR", "Mean", "Std"]]
for lr, runs in res:
    runs = np.array(runs)
    pretty += [[lr, runs.mean(), runs.std()]]
print(tabulate(pretty))

########################################################################################
## OFFLINE AUG
########################################################################################

res = (
    ((0, 0, 0), (83.29903, 82.89061, 83.01646)),
    ((0, 0, 1), (83.45442, 83.63076, 83.82413)),
    ((0, 1, 0), (83.89591, 84.56100, 83.51876)),
    ((0, 1, 1), (83.46847, 84.46586, 83.15600)),
    ((1, 0, 0), (85.23983, 84.51490, 84.26195)),
    ((1, 0, 1), (85.09336, 84.42223, 84.59901)),
    ((1, 1, 0), (84.11455, 84.38198, 84.43308)),
    ((1, 1, 1), (85.50255, 84.88704, 84.33488)),
)

pretty = [["PFR", "Mean", "Std"]]
for (p, f, r), runs in res:
    runs = np.array(runs)
    pretty += [[f"P{p}F{f}R{r}", runs.mean(), runs.std()]]
print(tabulate(pretty))


########################################################################################
## ROTATION
########################################################################################
res = (
    (0, (85.50255, 84.88704, 84.33488)),
    (10, (84.23689, 85.06489, 84.85812)),
    (20, (84.96628, 85.36835, 84.53506)),
    (30, (83.77186, 84.65420, 83.69778)),
)

pretty = [["Rotation", "Mean", "Std"]]
for rot, runs in res:
    runs = np.array(runs)
    pretty += [[rot, runs.mean(), runs.std()]]
print(tabulate(pretty))

########################################################################################
## SCALE
########################################################################################
res = (
    (0, (85.50255, 84.88704, 84.33488)),
    (0.1, (83.55176, 83.19931, 83.40881)),
    (0.2, (83.20576, 83.07797, 83.35737)),
    (0.3, (83.08891, 82.81269, 84.58560)),
)

pretty = [["Scale", "Mean", "Std"]]
for scale, runs in res:
    runs = np.array(runs)
    pretty += [[scale, runs.mean(), runs.std()]]
print(tabulate(pretty))

########################################################################################
## CROP
########################################################################################
res = (
    (0, (85.50255, 84.88704, 84.33488)),
    (0.7, (84.47065, 84.75834, 84.81954)),
    (0.8, (85.18958, 84.89105, 84.99763)),
    (0.9, (85.73553, 85.57474, 85.80949)),
)

pretty = [["Crop", "Mean", "Std"]]
for crop, runs in res:
    runs = np.array(runs)
    pretty += [[crop, runs.mean(), runs.std()]]
print(tabulate(pretty))

########################################################################################
## COLOR
########################################################################################
res = (
    (0, (85.50255, 84.88704, 84.33488)),
    (0.1, (85.39170, 85.19188, 86.07763)),
    (0.2, (85.37144, 85.89094, 85.76421)),
    (0.3, (85.31983, 84.56982, 85.53279)),
)

pretty = [["Color", "Mean", "Std"]]
for color, runs in res:
    runs = np.array(runs)
    pretty += [[color, runs.mean(), runs.std()]]
print(tabulate(pretty))

########################################################################################
## GRID
########################################################################################
res = (
    ((32, "focal2_0.1", 0.01), (84.57452, 83.25228, 84.11350)),
    ((32, "focal2_0.1", 0.005), (85.13223, 84.18422, 83.43625)),
    ((32, "focal2_0.1", 0.0025), (83.44164, 83.60793, 84.13859)),
    ((32, "focal2_0.1", 0.001), (83.94943, 83.80612, 83.61052)),
    ((32, "focal2_0.1", 0.0005), (83.89330, 83.78875, 83.90539)),
    ((32, "focal2_0.1", 0.00025), (83.98378, 84.07035, 83.88977)),
    ((32, "focal2_0.1", 0.0001), (82.53543, 82.67727, 83.04727)),
    ((32, "focal2_0.8", 0.01), (85.39503, 84.74168, 84.50462)),
    ((32, "focal2_0.8", 0.005), (84.19818, 85.44563, 85.67221)),
    ((32, "focal2_0.8", 0.0025), (83.25014, 83.97313, 83.26833)),
    ((32, "focal2_0.8", 0.001), (84.20322, 83.34126, 83.52408)),
    ((32, "focal2_0.8", 0.0005), (83.65728, 83.45961, 83.42199)),
    ((32, "focal2_0.8", 0.00025), (83.59404, 84.05504, 83.89271)),
    ((32, "focal2_0.8", 0.0001), (82.37865, 82.08212, 82.32175)),
    ((64, "focal2_0.1", 0.01), (84.55022, 84.37591, 84.72224)),
    ((64, "focal2_0.1", 0.005), (83.67797, 85.56038, 84.66106)),
    ((64, "focal2_0.1", 0.0025), (83.23090, 83.59270, 84.20292)),
    ((64, "focal2_0.1", 0.001), (83.59399, 83.60162, 83.71209)),
    ((64, "focal2_0.1", 0.0005), (84.25047, 83.96835, 84.17825)),
    ((64, "focal2_0.1", 0.00025), (84.25219, 83.94808, 84.65255)),
    ((64, "focal2_0.1", 0.0001), (83.20292, 82.54448, 83.18842)),
    ((64, "focal2_0.8", 0.01), (83.89462, 84.28940, 84.68748)),
    ((64, "focal2_0.8", 0.005), (84.18577, 85.13131, 85.43721)),
    ((64, "focal2_0.8", 0.0025), (83.37298, 81.76690, 83.44997)),
    ((64, "focal2_0.8", 0.001), (83.30824, 84.37461, 83.56988)),
    ((64, "focal2_0.8", 0.0005), (84.37416, 83.80501, 83.93335)),
    ((64, "focal2_0.8", 0.00025), (84.24953, 83.79055, 84.03728)),
    ((64, "focal2_0.8", 0.0001), (82.68112, 82.48229, 82.99652)),
)

pretty = [["BS", "Loss", "LR", "Mean", "Std"]]
for (bs, loss, lr), runs in res:
    runs = np.array(runs)
    pretty += [[bs, loss, lr, runs.mean(), runs.std()]]
print(tabulate(pretty))

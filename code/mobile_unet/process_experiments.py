import numpy as np

from tabulate import tabulate


########################################################################################
## LR
########################################################################################

res = {
    0.01: (83.29903, 82.89061, 83.01646),
    0.005: (82.49348, 82.85790, 81.51328),
    0.0025: (82.72171, 81.99200, 81.93025),
    0.001: (83.12994, 82.57712, 83.19931),
    0.0005: (82.69577, 82.94604, 82.57509),
    0.00025: (82.55172, 82.35741, 82.19239),
    0.0001: (81.68054, 81.44921, 81.67149),
}
res = sorted(res.items(), reverse=True)

pretty = [["LR", "Mean", "Std"]]
for lr, runs in res:
    runs = np.array(runs)
    pretty += [[lr, runs.mean(), runs.std()]]
print(tabulate(pretty))

########################################################################################
## OFFLINE AUG
########################################################################################

res = (
    ((0, 0, 0), (83.29903, 82.89061, 83.01646)),
    ((0, 0, 1), (83.45442, 83.63076, 83.82413)),
    ((0, 1, 0), (83.89591, 84.56100, 83.51876)),
    ((0, 1, 1), (83.46847, 84.46586, 83.15600)),
    ((1, 0, 0), (85.23983, 84.51490, 84.26195)),
    ((1, 0, 1), (85.09336, 84.42223, 84.59901)),
    ((1, 1, 0), (84.11455, 84.38198, 84.43308)),
    ((1, 1, 1), (85.50255, 84.88704, 84.33488)),
)

pretty = [["PFR", "Mean", "Std"]]
for (p, f, r), runs in res:
    runs = np.array(runs)
    pretty += [[f"P{p}F{f}R{r}", runs.mean(), runs.std()]]
print(tabulate(pretty))


########################################################################################
## ROTATION
########################################################################################
res = (
    (10, ),
    (20, ),
    (30, ),
)

pretty = [["Rotation", "Mean", "Std"]]
for rot, runs in res:
    runs = np.array(runs)
    pretty += [[rot, runs.mean(), runs.std()]]
print(tabulate(pretty))

########################################################################################
## SCALE
########################################################################################
res = (
    (0.1, ),
    (0.2, ),
    (0.2, ),
)

pretty = [["Scale", "Mean", "Std"]]
for scale, runs in res:
    runs = np.array(runs)
    pretty += [[scale, runs.mean(), runs.std()]]
print(tabulate(pretty))

########################################################################################
## CROP
########################################################################################
res = (
    (0.7, ),
    (0.8, ),
    (0.9, ),
)

pretty = [["Crop", "Mean", "Std"]]
for crop, runs in res:
    runs = np.array(runs)
    pretty += [[crop, runs.mean(), runs.std()]]
print(tabulate(pretty))

########################################################################################
## COLOR
########################################################################################
res = (
    (0.1, ),
    (0.2, ),
    (0.3, ),
)

pretty = [["Color", "Mean", "Std"]]
for color, runs in res:
    runs = np.array(runs)
    pretty += [[color, runs.mean(), runs.std()]]
print(tabulate(pretty))

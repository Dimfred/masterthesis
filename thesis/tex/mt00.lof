\addvspace {10\p@ }
\addvspace {10\p@ }
\contentsline {figure}{\numberline {2.1}{\ignorespaces All used \acp {ECC} in this thesis in German notation: 1. Voltage Source, 2. Current Source, 3. Resistor, 4. Inductor, 5. Capacitor, 6. Diode, 7. Ground\relax }}{7}{}%
\contentsline {figure}{\numberline {2.2}{\ignorespaces A MLP with two hidden layers (two neurons in the first and one in the last), each input gets multiplied with each weight of each neuron, summed up and fed into an activation function to produce the input for the next layer, where this process is repeated.\relax }}{12}{}%
\contentsline {figure}{\numberline {2.3}{\ignorespaces Example convolution of a 4x4 input (blue) with a 3x3 kernel (dark blue) and a stride of 1, resulting in a 2x2 output (cyan) \cite {conv_arithmetic}\relax }}{16}{}%
\contentsline {figure}{\numberline {2.4}{\ignorespaces Example of results obtained through the Selective Search algorithm (top) with increasing region scale from left to right and bounding boxes drawn around those regions (bottom). Selective Search produces sub-segmentations of objects in an image, considering size, color, texture and shape based features for the grouping of the regions. \cite {selective_search}\relax }}{19}{}%
\contentsline {figure}{\numberline {2.5}{\ignorespaces Bounding box calculation in the YOLOv4 network based on a prior anchor box \cite {yolov2}. The $b_*$ indicate the final prediction, $p_*$ indicate parameters of the prior bounding box and $c_*$ indicate the prior bounding box spatial offset based on the current cell. The final center coordinate offset is predicted non-linearly with a sigmoid function, while the final width and height are predicted linearly, as it is done in \cite {fast_rcnn} and \cite {faster_rcnn}.\relax }}{27}{}%
\contentsline {figure}{\numberline {2.6}{\ignorespaces The difference between object detection, semantic segmentation and instance segmentation. In object detection the instance with a rough estimate (bounding box) is predicted, in semantic segmentation a segmentation mask for an object is predicted without considering the underlying instance and in instance segmentation the instance as well as a segmentation mask for an object is predicted. \cite {instance_vs_semantic_fig}\relax }}{31}{}%
\contentsline {figure}{\numberline {2.7}{\ignorespaces The inverted residual block. A $1 \times 1$ convolution with non-linear activation followed by a depthwise separable convolution and a linear $1 \times 1$ convolution with residual connection to the input. The residual connection is here additive, i.e. the input gets added to the output of the linear $1 \times 1$ convolution.\relax }}{33}{}%
\contentsline {figure}{\numberline {2.8}{\ignorespaces An example drawing of a hypergraph with its corresponding adjacency matrix. The hypergraph is defined as: $H = (V, E)$, $V = \{v1, v2, v3, v4\}$, $E = \{e1, e2\}$, with $e1 = \{v1, v2, v3\}$, $e2 = \{v3, v4\}$. In the adjacency matrix a row corresponds to a hyperedge and each column to a vertex. When a vertex is present in a hyperedge it has a 1 as an entry in the matrix, when a vertex is not present it has a 0.\relax }}{35}{}%
\contentsline {figure}{\numberline {2.9}{\ignorespaces Example of a precision-recall curve, where precision and recall were calculated for different \ac {IoU} thresholds and sorted and plotted by their recall values \cite {map_article}. The \ac {AP} is the area under the curve.\relax }}{37}{}%
\addvspace {10\p@ }
\contentsline {figure}{\numberline {3.1}{\ignorespaces An example visual labeling helper image (top), shown with the index of the respective bounding box in the YOLO label file, together with the corresponding hypergraph adjacency matrix (bottom). Two columns in the matrix correspond to one \ac {ECC}, each column to one orientation, where the first column can either be the left or top orientation and the second column be the right or bottom orientation. The last column in the table further shows the string representation of an edge, which acts as the input for the labeling tool.\relax }}{42}{}%
\contentsline {figure}{\numberline {3.2}{\ignorespaces Example predictions of YOLO (left) and \ac {MUnet} (right). YOLO predicts a bounding box around each component with its corresponding class, while \ac {MUnet} predicts a segmentation mask a binary fashion of the whole \ac {ECD} drawing, including \ac {ECC} annotations. Primary segmentation is needed to remove the checkered background from the image.\relax }}{45}{}%
\contentsline {figure}{\numberline {3.3}{\ignorespaces The results of the initial learning rate search shown on the validation set, as the mean of the mAPs of three separate training runs.\relax }}{51}{}%
\contentsline {figure}{\numberline {3.4}{\ignorespaces The results of the offline augmentation with the different offline augmentation configurations compared with the results of the best performing learning rate (baseline). When rotation and flip are enabled simultaneously the flipped image also gets rotated three times by 90\textdegree . Results are given as the mean of the mAP of three separate training runs.\relax }}{52}{}%
\contentsline {figure}{\numberline {3.5}{\ignorespaces Results of the online augmentation experiment compared to the baseline which was established in the offline augmentation experiment. Each augmentation shows a clear increase in mAP in comparison to the baseline.\relax }}{54}{}%
\contentsline {figure}{\numberline {3.6}{\ignorespaces Results of the grid search shown for all loss functions, learning rates and batch sizes.\relax }}{55}{}%
\contentsline {figure}{\numberline {3.7}{\ignorespaces Results of the YOLO grid search for all used loss functions and learning rates shown for batch size 64.\relax }}{56}{}%
\contentsline {figure}{\numberline {3.8}{\ignorespaces Different input sizes tested after training on the validation set.\relax }}{56}{}%
\contentsline {figure}{\numberline {3.9}{\ignorespaces Results of the voting based thresholding approach to improve model performance, shown on the validation set for all possible voting thresholds.\relax }}{58}{}%
\contentsline {figure}{\numberline {3.10}{\ignorespaces The final results of the tuning experiment performed on the validation set, presented also with the performance on the test dataset. Specific explanation of the experiments with the optimal obtained parameters can be found in table 3.5\hbox {}.\relax }}{59}{}%
\contentsline {figure}{\numberline {3.11}{\ignorespaces The results of the initial learning rate search shown on the validation set, as the mean F1-Score of three separate training runs.\relax }}{61}{}%
\contentsline {figure}{\numberline {3.12}{\ignorespaces The results of the offline augmentation experiment shown on the validation set, as the mean F1-Score of three separate training runs.\relax }}{62}{}%
\contentsline {figure}{\numberline {3.13}{\ignorespaces The results of the online augmentation experiment shown on the validation set, as the mean F1-Score of three separate training runs.\relax }}{63}{}%
\addvspace {10\p@ }
\addvspace {10\p@ }
\addvspace {10\p@ }
\contentsline {figure}{\numberline {A.1}{\ignorespaces The results of the \ac {DIoU}-\ac {NMS} parameter tuning. All possible combinations of score threshold and \ac {IoU} threshold were evaluated on the validation set. The best performing combination is the one with a score threshold of 0.1 and a \ac {IoU} threshold of 0.45.\relax }}{102}{}%
\contentsline {figure}{\numberline {A.2}{\ignorespaces The results of the \ac {WBF} parameter tuning. All possible combinations of score threshold and \ac {IoU} threshold were evaluated on the validation set. The best performing combination is the one with a score threshold of 0.15 and an \ac {IoU} threshold of 0.25.\relax }}{103}{}%
\contentsline {figure}{\numberline {A.3}{\ignorespaces The results of the \ac {WBF} tuning with \ac {TTA}. All possible combinations of score threshold and \ac {IoU} threshold were evaluated on the validation set. The best performing combination is the one with a score threshold of 0.1 and an \ac {IoU} threshold of 0.45.\relax }}{104}{}%
\contentsline {figure}{\numberline {B.1}{\ignorespaces F1-Score results of the \ac {MUnet} grid search experiment shown on the full validation data. Results are shown combined for the loss and batch size against the learning rate.\relax }}{105}{}%
\contentsline {figure}{\numberline {B.2}{\ignorespaces Recall results of the \ac {MUnet} grid search experiment shown on the full validation data. Results are shown combined for the loss and batch size against the learning rate.\relax }}{106}{}%
\contentsline {figure}{\numberline {B.3}{\ignorespaces Precision results of the \ac {MUnet} grid search experiment shown on the full validation data. Results are shown combined for the loss and batch size against the learning rate.\relax }}{107}{}%
\contentsline {figure}{\numberline {B.4}{\ignorespaces F1-Score results of the \ac {MUnet} grid search experiment shown validation data, for checkered images only. Results are shown combined for the loss and batch size against the learning rate.\relax }}{108}{}%
\contentsline {figure}{\numberline {B.5}{\ignorespaces Recall results of the \ac {MUnet} grid search experiment shown validation data, for checkered images only. Results are shown combined for the loss and batch size against the learning rate.\relax }}{109}{}%
\contentsline {figure}{\numberline {B.6}{\ignorespaces Precision results of the \ac {MUnet} grid search experiment shown validation data, for checkered images only. Results are shown combined for the loss and batch size against the learning rate.\relax }}{110}{}%
\contentsline {figure}{\numberline {B.7}{\ignorespaces Fold BS 32\relax }}{112}{}%
\contentsline {figure}{\numberline {B.8}{\ignorespaces Fold BS 64\relax }}{113}{}%
